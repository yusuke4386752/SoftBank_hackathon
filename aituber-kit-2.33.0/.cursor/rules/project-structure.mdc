---
description: 
globs: 
alwaysApply: false
---
# プロジェクト構成とファイル配置

すべての実装において、以下のディレクトリ構造に従ってください：

```
aituber-kit/
├── src/                             # ソースコード
│   ├── pages/                       # Next.js pages ルーティング
│   │   ├── api/                     # APIエンドポイント
│   │   │   ├── services/            # 共通APIサービスロジック
│   │   │   │   ├── vercelAi.ts
│   │   │   │   ├── customApi.ts
│   │   │   │   └── utils.ts
│   │   │   └── [...].ts             # その他 API ルート
│   │   └── [...].tsx                # ページコンポーネント
│   ├── components/                  # 共有 React コンポーネント
│   ├── features/                    # 機能モジュール
│   │   ├── chat/                    # チャット関連機能
│   │   ├── messages/                # メッセージ関連機能
│   │   ├── stores/                  # 状態管理
│   │   └── ...                      # その他ドメイン
│   ├── hooks/                       # カスタムフック
│   ├── utils/                       # 共通ユーティリティ
│   ├── lib/                         # 外部ライブラリラッパー等
│   └── styles/                      # スタイル定義
├── public/                          # 静的ファイル
├── locales/                         # 多言語リソース
├── docs/                            # ドキュメント
└── scripts/                         # ユーティリティスクリプト
```

## 配置ルール
- **UIコンポーネント:** 共有Reactコンポーネントは [`src/components/`](mdc:src/components) に配置してください。
- **APIエンドポイント:** APIルートは [`src/pages/api/`](mdc:src/pages/api) で定義してください。
- **共通ユーティリティ:** 共有関数は [`src/utils/`](mdc:src/utils) に配置してください。
- **APIサービスロジック:** AIサービス統合などの処理は [`src/pages/api/services/`](mdc:src/pages/api/services) に実装してください。
- **機能モジュール:** 機能固有のコード（チャット、メッセージ、状態管理など）は [`src/features/`](mdc:src/features) 以下にグループ化してください。
- **カスタムフック:** カスタムReactフックは [`src/hooks/`](mdc:src/hooks) に配置してください。
